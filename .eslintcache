[{"E:\\react\\viewoftask\\src\\index.js":"1","E:\\react\\viewoftask\\src\\App.js":"2","E:\\react\\viewoftask\\src\\reportWebVitals.js":"3","E:\\react\\viewoftask\\src\\view\\GetUsers.jsx":"4","E:\\react\\viewoftask\\src\\view\\GetUserDetails.jsx":"5","E:\\react\\viewoftask\\src\\view\\CreateUser.jsx":"6","E:\\react\\viewoftask\\src\\view\\UpdateUser.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":364,"mtime":1610165644769,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2910,"mtime":1609976411108,"results":"12","hashOfConfig":"9"},{"size":1311,"mtime":1609976351785,"results":"13","hashOfConfig":"9"},{"size":4546,"mtime":1610165965199,"results":"14","hashOfConfig":"9"},{"size":4219,"mtime":1610165939327,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9hav77",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\viewoftask\\src\\index.js",[],["33","34"],"E:\\react\\viewoftask\\src\\App.js",["35","36","37","38"],"E:\\react\\viewoftask\\src\\reportWebVitals.js",[],"E:\\react\\viewoftask\\src\\view\\GetUsers.jsx",["39"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n\r\nclass GetUsers extends Component{\r\n\r\n    constructor(props){\r\n        super(props) \r\n        this.state={\r\n            data:[],\r\n            errorMsg:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            console.log(response)\r\n            this.setState({data: response.data})\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n            this.setState({errorMsg:'No data found'})\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {data , errorMsg} = this.state\r\n\r\n\r\n        return(\r\n            <>\r\n            <Container maxWidth=\"md\" style={{backgroundColor:'#cfe8fc'}}>\r\n            <h1>Users</h1>\r\n            <TableContainer component={Paper}>\r\n      <Table style={{minWidth: 650}} aria-label=\"caption table\">\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>No</TableCell>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"right\">Update</TableCell>\r\n            <TableCell align=\"right\">Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {\r\n                data.length ?\r\n                data.map(post =>\r\n                    <TableRow key={post.id}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {post.id}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                        <Button variant=\"contained\">{post.name}</Button>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">    \r\n                          <Button variant=\"contained\" color=\"primary\">\r\n                            Update\r\n                            </Button>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Delete\r\n                        </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    ) :\r\n                null\r\n            }\r\n        \r\n        </TableBody> \r\n      </Table>\r\n    </TableContainer>\r\n    </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetUsers","E:\\react\\viewoftask\\src\\view\\GetUserDetails.jsx",["40","41"],"import React,{Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n  const imgsrc='./image/flower.jpg';  \r\n\r\nconst GetUserDetails = () => {\r\n\r\n\r\n        const classes = useStyles();\r\n\r\n        return (\r\n            <>\r\n            <Container maxWidth=\"md\">\r\n\r\n            <h1>User Details</h1>\r\n            \r\n    <div className={classes.root}>\r\n    <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <img src={imgsrc} alt=\"image\"/><br/><br/>\r\n              <label>Name : Anu Priya</label><br/><br/>\r\n              <label>Email : jhgdsfjhgljhg</label><br/><br/>\r\n              <label>Mobile No : 1111111111</label><br/><br/>\r\n              <label>Date of Birth : 0:1:0000</label><br/>\r\n          </Paper>\r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n        </Container>\r\n        </>\r\n        );\r\n    \r\n}\r\n\r\nexport default GetUserDetails","E:\\react\\viewoftask\\src\\view\\CreateUser.jsx",["42"],"E:\\react\\viewoftask\\src\\view\\UpdateUser.jsx",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"48","severity":1,"message":"53","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":22},{"ruleId":"48","severity":1,"message":"54","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":18},{"ruleId":"48","severity":1,"message":"55","line":39,"column":23,"nodeType":"50","messageId":"51","endLine":39,"endColumn":31},{"ruleId":"48","severity":1,"message":"56","line":1,"column":15,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":36,"column":13,"nodeType":"59","endLine":36,"endColumn":44},{"ruleId":"48","severity":1,"message":"60","line":13,"column":8,"nodeType":"50","messageId":"51","endLine":13,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":68,"column":13,"nodeType":"59","endLine":68,"endColumn":56},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'GetUsers' is defined but never used.","'GetUserDetails' is defined but never used.","'CreateUser' is defined but never used.","'errorMsg' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]